---

- name: enable mesos update
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: "^exclude=mesos*"
    line: '#exclude=mesos* docker* ceph* zookeeper*'
    state: present
  when:
    ansible_os_family == "RedHat"

- name: install mesos agent packages centos
  package:
    name:
      - apr-util
      - "{{ mesos_rpm }}"
      - containernetworking-plugins
    state: present
  when:
    ansible_os_family == "RedHat"

- name: install mesos master packages Debian
  apt:
    name:
      - libsvn1
      - libsasl2-modules
      - libevent-dev
      - libcurl4-nss-dev
      - "{{ mesos_deb }}*"
    state: present
  when:
    ansible_distribution == "Debian"

- name: install mesos master packages ubuntu
  apt:
    name:
      - libsvn1
      - libsasl2-modules
      - libevent-dev
      - libcurl4-openssl-dev
      - "{{ mesos_deb }}*"
    state: present
  when:
    ansible_distribution == "Ubuntu"

- name: disable mesos update
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: "^#exclude=mesos*"
    line: 'exclude=mesos* docker* ceph* zookeeper*'
    state: present
  when:
    ansible_os_family == "RedHat"
    
- name: Remove deprecated config files
  file: 
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ mesos_etc_dir }}/modules"

- name: create zk file
  file: 
    path: /etc/mesos/zk 
    state: touch
    mode: 0640

- name: create ssl directory
  file: 
    path: /etc/mesos/ssl
    state: directory
    mode: 0755

- name: Check if the work directory exists
  stat:
    path: "{{ mesos_work_dir }}"
  register: work_dir

- name: create work directory
  file: 
    path: "{{ mesos_work_dir }}"
    state: directory
    mode: 0755
  when: not work_dir.stat.exists

- name: copy ssl cert
  copy:
    src: "{{ mesos_ssl_crt }}"
    dest: /etc/mesos/ssl/mesos.crt
    mode: 0644
  tags:
    - cert

- name: copy ssl key
  copy:
    src: "{{ mesos_ssl_key }}"
    dest: /etc/mesos/ssl/mesos.key
    mode: 0644
  tags:
    - cert

- name: Check if old mesos-agent folder exist
  stat: path={{ mesos_etc_dir }}
  register: mesos_agent

- name: Remove deprecated config files
  file: 
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ mesos_etc_dir }}/seccomp_config_dir"  
    - "{{ mesos_etc_dir }}/seccomp_profile_name"
    - "/etc/mesos-slave"
    - "/etc/default/mesos"
    - "/etc/default/mesos-agent"
    - "/etc/mesos/modules/logrotate.config"

- name: configure zk access
  lineinfile: dest=/etc/mesos/zk create=yes state=present regexp="^zk=*" line="zk://client:{{ zookeeper_client_secret }}@{% for host in groups['manager'] %}{{ host }}:2181{% if not loop.last %},{% endif %}{% endfor %}/mesos" mode=0640

- name: configure master access
  lineinfile: dest={{ mesos_etc_dir }}/master create=yes state=present regexp="^zk=*" line="zk://client:{{ zookeeper_client_secret }}@{% for host in groups['manager'] %}{{ host }}:2181{% if not loop.last %},{% endif %}{% endfor %}/mesos" mode=0640

- name: configure user env string
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^USER=*" line="USER=root"   mode=0640

- name: enable ssl for mesos libprocess
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_ENABLED=*" line="LIBPROCESS_SSL_ENABLED={{ libprocess_enable_ssl }}" mode=0640

- name: enable ssl verify for mesos (deprecated)
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_VERIFY_CERT=*" line="LIBPROCESS_SSL_VERIFY_CERT={{ libprocess_enable_ssl_verify }}"  mode=0640

- name: enable ssl verify for mesos
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_VERIFY_SERVER_CERT=*" line="LIBPROCESS_SSL_VERIFY_SERVER_CERT={{ libprocess_enable_ssl_verify }}"  mode=0640

- name: add mesos libprocess ssl key file
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_KEY_FILE=*" line="LIBPROCESS_SSL_KEY_FILE=/etc/mesos/ssl/mesos.key"  mode=0640

- name: add mesos libprocess ssl cert file
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_CERT_FILE=*" line="LIBPROCESS_SSL_CERT_FILE=/etc/mesos/ssl/mesos.crt"  mode=0640

- name: enable required ssl cert (deprecated)
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_REQUIRE_CERT=*" line="LIBPROCESS_SSL_REQUIRE_CERT={{ libprocess_ssl_require_cert }}"  mode=0640

- name: enable required ssl cert 
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_REQUIRE_CLIENT_CERT=*" line="LIBPROCESS_SSL_REQUIRE_CLIENT_CERT={{ libprocess_ssl_require_cert }}"  mode=0640

- name: add mesos libprocess ssl ciphers
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_CIPHERS=*" line="LIBPROCESS_SSL_CIPHERS={{ libprocess_ssl_ciphers }}"

- name: set the ssl hostname validation scheme
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LIBPROCESS_SSL_HOSTNAME_VALIDATION_SCHEME=*" line="LIBPROCESS_SSL_HOSTNAME_VALIDATION_SCHEME={{ libprocess_ssl_hostname_validation_scheme }}"  mode=0640

- name: set ulimit
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^ULIMIT=*" line="ULIMIT=\"-n {{ mesos_ulimit }}\""  mode=0640

- name: set logs dir
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^LOGS=*" line="LOGS={{ mesos_logs_dir }}"  mode=0640

- name: configure mesos-zk string
  lineinfile: dest=/etc/default/mesos create=yes state=present regexp="^MESOS_ZK=*" line="MESOS_ZK=file:///etc/mesos/zk"

- name: set mesos libprocess ssl downgrade
  lineinfile: dest=/etc/sysconfig/marathon create=yes state=present regexp="^LIBPROCESS_SSL_ENABLE_DOWNGRADE=*" line="LIBPROCESS_SSL_ENABLE_DOWNGRADE={{ libprocess_ssl_enable_downgrade }}" mode=0640

- name: set hostname in mesos
  lineinfile: dest={{ mesos_etc_dir }}/hostname state=present regexp="^" line="{{ inventory_hostname }}" create=yes mode=0640

- name: increase the mesos-agent executor timeout
  lineinfile: dest={{ mesos_etc_dir }}/executor_registration_timeout state=present line="5mins" regexp="^" create=yes mode=0640

- name: add containerizer to the mesos-agent
  lineinfile: dest={{ mesos_etc_dir }}/containerizers state=present line="docker,mesos" regexp="^" create=yes mode=0640

- name: add mesos-agent credentials
  lineinfile: dest={{ mesos_etc_dir }}/credential state=present line="/etc/mesos/credential" regexp="^" create=yes mode=0640

- name: add mesos-agent http credentials
  lineinfile: dest={{ mesos_etc_dir }}/http_credentials state=present line="/etc/mesos/http_credentials" regexp="^" create=yes mode=0640

- name: enable cluster http readonly authentication
  lineinfile: dest={{ mesos_etc_dir }}/authenticate_http_readonly state=present create=yes regexp="^" line="true" mode=0640

- name: enable cluster http readwrite authentication
  lineinfile: dest={{ mesos_etc_dir }}/authenticate_http_readwrite state=present create=yes regexp="^" line="true" mode=0640

- name: enable cluster http authenticators
  lineinfile: dest={{ mesos_etc_dir }}/http_authenticators state=present create=yes regexp="^" line="basic" mode=0640

- name: add weave.socks to the mesos-agent
  lineinfile: dest={{ mesos_etc_dir }}/docker_socket state=present line="/var/run/weave/weave.sock" regexp="^" create=yes mode=0640

- name: set slave ip in mesos
  lineinfile: dest={{ mesos_etc_dir }}/ip state=present create=yes regexp="^" line="{{ client_address }}" mode=0640

- name: disable hostname lookup
  lineinfile: dest={{ mesos_etc_dir }}/hostname_lookup state=present create=yes regexp="^" line="false" mode=0640

- name: set memory profiling
  lineinfile: dest={{ mesos_etc_dir }}/memory_profiling state=present create=yes regexp="^" line="true" mode=0640


- name: set mesos isolation
  lineinfile: 
    dest: "{{ mesos_etc_dir }}/isolation" 
    state: present 
    create: yes 
    regexp: "^" 
    line: "cgroups/all,disk/du,network/cni,filesystem/linux,docker/runtime,volume/sandbox_path,volume/secret,posix/rlimits,namespaces/pid,linux/capabilities" 
    mode: 0640

- name: set mesos attributes
  lineinfile: 
    dest: "{{ mesos_etc_dir }}/attributes" 
    state: present 
    create: yes 
    regexp: "^" 
    line: "{{ mesos_attributes }}"
    mode: 0640
  when:
    mesos_attributes|length > 0

- name: set image provider
  lineinfile: dest={{ mesos_etc_dir }}/image_providers state=present create=yes regexp="^" line="appc,docker" mode=0640

- name: set mesos module directory
  lineinfile: dest={{ mesos_etc_dir }}/modules_dir state=present create=yes regexp="^" line="/etc/mesos/modules" mode=0640

- name: set mesos work-dir
  lineinfile: dest={{ mesos_etc_dir }}/work_dir state=present create=yes regexp="^" line="{{ mesos_work_dir }}" mode=0640

- name: set mesos webui-dir
  lineinfile: dest=/etc/mesos-master/webui_dir state=present create=yes regexp="^" line="/usr/share/mesos/webui" mode=0755

- name: set mesos cni plugins dir
  lineinfile: dest={{ mesos_etc_dir }}/network_cni_plugins_dir state=present create=yes regexp="^" line="/usr/lib/cni/" mode=0640

- name: set mesos executor env with ssl
  template: 
    src: executor.json.js
    dest: "{{ mesos_etc_dir }}/executor_environment_variables"
    mode: 0640
  when:
    - libprocess_enable_ssl == "true"

- name: set mesos resources
  template: 
    src: resources.j2
    dest: "{{ mesos_etc_dir }}/resources"
    mode: 0640

- name: set mesos executor env without ssl
  file:
    path: "{{ mesos_etc_dir }}/executor_environment_variables"
    state: absent
  when:
    - libprocess_enable_ssl == "false"

- name: set mesos container dns
  template: 
    src: container_dns.j2
    dest: "{{ mesos_etc_dir }}/default_container_dns"
    mode: 0640

- name: create mesos module directory
  file:
    path: /etc/mesos/modules
    state: directory
    mode: 0750    

- name: create mesos csi directory
  file:
    path: /etc/mesos/csi
    state: directory
    mode: 0750            

- name: create mesos seccomp directory
  file:
    path: /etc/mesos/seccomp
    state: directory
    mode: 0750    

- name: copy mesos seccomp default profile
  copy:
    src: default.json
    dest: /etc/mesos/seccomp/default.json
    mode: 0640

- name: copy mesos credential
  template: src=credential.j2 dest=/etc/mesos/credential mode=0640  

- name: copy mesos http credential
  template: src=http_credentials.j2 dest=/etc/mesos/http_credentials mode=0640  

- name: start necessary services
  service:
    name: "{{ item }}"
    daemon_reload: true
    enabled: yes
    state: restarted
  with_items:
    - mesos-slave
  tags:
    - cert

- name: ensure mesos-master service is disabled
  service:
    name: mesos-master
    enabled: no
    state: stopped
  ignore_errors: true
