---

  - name: Check if SSL Certificate Exist
    stat: 
      path: "{{ cert_home }}/{{ inventory_hostname }}.key"
    register: ssl_cert

  - name: Copy ssl configuration file
    template: src=marathon.cnf.j2 dest=/etc/pki/tls/marathon.cnf mode=0644
    when: ssl_cert.stat.exists == False


  - name: Generate Private Key
    command: openssl genrsa -out {{ cert_home }}/{{ inventory_hostname }}.key 2048
    when: ssl_cert.stat.exists == False

  - name: Create CSR
    command: openssl req -subj "/C=DE/ST=, Inc./CN={{ inventory_hostname }}"  -new -out {{ cert_home }}/{{ inventory_hostname }}.csr -key {{ cert_home }}/{{ inventory_hostname }}.key -config /etc/pki/tls/marathon.cnf
    when: ssl_cert.stat.exists == False

  - name: Dump Certificate
    command: openssl req -text -noout -in {{ cert_home }}/{{ inventory_hostname }}.csr
    register: dump_csr

  - debug:
      var: dump_csr

  - name: Self Sign Certificate
    command: openssl x509 -req -days 3650 -in  {{ cert_home }}/{{ inventory_hostname }}.csr  -signkey {{ cert_home }}/{{ inventory_hostname }}.key  -out {{ cert_home }}/{{ inventory_hostname }}.crt -extensions v3_req -extfile /etc/pki/tls/marathon.cnf
    when: ssl_cert.stat.exists == False

  - name: Generate java keystore
    community.general.java_keystore:
      name: example
      certificate_path: "{{ cert_home }}/{{ inventory_hostname }}.crt"
      private_key_path: "{{ cert_home }}/{{ inventory_hostname }}.key"
      password: "{{ marathon_jks_password }}"
      dest: "{{ cert_home }}/marathon.jks"

  - name: restart marathon
    service:
      name: "marathon"
      enabled: yes
      state: restarted

