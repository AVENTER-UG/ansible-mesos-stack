---

- name: add docker repo
  copy: src=docker-ce.repo dest=/etc/yum.repos.d/docker-main.repo mode=0644 
  when:
    ansible_os_family == "RedHat"

- name: enable docker update
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: "^exclude=mesos*"
    line: '#exclude=mesos* docker* ceph*'
    state: present
  when:
    ansible_os_family == "RedHat"

- name: add docker gpg-key
  apt_key: 
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present 
  when:
    ansible_os_family == "Debian"

- name: add docker apt repository
  apt_repository: 
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_lsb.codename|lower }}  stable"
    state: present 
    filename: docker
    update_cache: yes 
  when:
    ansible_os_family == "Debian"

- name: install docker required packaged
  package:
    name:
      - e2fsprogs
      - xfsprogs
    state: present
  when:
    ansible_os_family == "Debian"

- name: install docker packages for ubuntu
  package:
    name:
      - "{{ docker_version_deb }}"
      - containerd.io
    state: present
  when:
    ansible_os_family == "Debian"

- name: install docker packages for centos
  package:
    name:
      - "{{ docker_version_rpm }}"
      - containerd.io
    state: present
  when:
    ansible_os_family == "RedHat"

- name: disable docker update
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: "^#exclude=mesos*"
    line: 'exclude=mesos* docker* ceph*'
    state: present
  when:
    ansible_os_family == "RedHat"

- name: configure docker dns
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: ^OPTIONS=
    line: OPTIONS=' --dns {{ ansible_default_ipv4.address }} --dns-search {{ dns_domain }} --log-driver=journald {{ docker_options }} '
    state: present
    create: yes

- name: create Docker directory
  file: path=/etc/docker state=directory

- name: copy new docker systemd config
  copy: src=docker.systemd dest=/etc/systemd/system/docker.service mode=0640

- name: copy new docker daemone config
  template: src=daemon.json.j2 dest=/etc/docker/daemon.json mode=0640

- name: Add cron job to prune docker images
  cron:
    name: "delete all unused docker images "
    minute: "0"
    job: "docker image prune -a -f --filter \"label!=org.opencontainers.image.vendor=Weaveworks\" > /dev/null"
    state: present

- name: Add cron job to prune docker containers
  cron:
    name: "prune docker containers"
    minute: "0"
    job: "docker container prune -f > /dev/null"
    state: present  

- name: Add cron job to prune local docker volumes
  cron:
    name: "prune local docker volumes"
    minute: "0"
    job: "docker volume prune -f --filter \"label!=tag=mesos\" > /dev/null"
    state: present

- name: reload systemd
  shell: systemctl daemon-reload

- name: add docker to systemd init
  service: name=docker enabled=yes state=started

- name: restart docker
  service: 
    name: docker 
    state: restarted
